CREATE TABLE onlineMealEntity (
    idMeal TEXT PRIMARY KEY NOT NULL,
    strMeal TEXT NOT NULL,
    strMealThumb TEXT NOT NULL,
    strCategory TEXT NOT NULL
);

CREATE TABLE onlineMealCategoryEntity (
    idCategory TEXT PRIMARY KEY NOT NULL,
    strCategory TEXT NOT NULL,
    strCategoryDescription TEXT NOT NULL,
    strCategoryThumb TEXT NOT NULL
);


-- @Dao
-- interface OnlineMealsDao {
--     @Query("DELETE FROM online_meal_categories")
--     suspend fun deleteOnlineMealCategories()
--
--     @Query("DELETE FROM online_meals WHERE strCategory = :category")
--     suspend fun deleteOnlineMeals(category: String)
--
--     @Insert
--     suspend fun insertOnlineMealCategories(categories: List<OnlineMealCategoryEntity>)
--
--     @Insert
--     suspend fun insertOnlineMeals(meals: List<OnlineMealEntity>)
--
--     @Query("SELECT * FROM online_meal_categories")
--     suspend fun getOnlineMealCategories(): List<OnlineMealCategoryEntity>
--
--     @Query("SELECT * FROM online_meals WHERE strCategory = :category")
--     suspend fun getOnlineMeals(category: String): List<OnlineMealEntity>
-- }

-- getAllNotes:
-- SELECT * FROM noteEntity;
--
-- getNoteById:
-- SELECT * FROM noteEntity WHERE id = ?;
--
-- insertNote:
-- INSERT OR REPLACE
-- INTO noteEntity (id, title, content, colorHex, dateCreated)
-- VALUES (?, ?, ?, ?, ?);
--
-- deleteNoteById:
-- DELETE FROM noteEntity WHERE id = ?;

deleteOnlineMealCategories:
DELETE FROM onlineMealCategoryEntity;

deleteOnlineMeals:
DELETE FROM onlineMealEntity WHERE strCategory = :category;

insertOnlineMealCategories:
INSERT OR REPLACE INTO onlineMealCategoryEntity (idCategory, strCategory, strCategoryDescription, strCategoryThumb) VALUES (?, ?, ?, ?);

insertOnlineMeals:
INSERT OR REPLACE INTO onlineMealEntity (idMeal, strMeal, strMealThumb, strCategory) VALUES (?, ?, ?, ?);

getOnlineMealCategories:
SELECT * FROM onlineMealCategoryEntity;

getOnlineMeals:
SELECT * FROM onlineMealEntity WHERE strCategory = :category;


