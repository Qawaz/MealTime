import kotlin.collections.List;

CREATE TABLE mealEntity (
    name TEXT,
    imageUrl TEXT,
    cookingTime INTEGER AS Int,
    servingPeople INTEGER AS Int,
    category TEXT,
    cookingDifficulty TEXT,
    ingredients TEXT AS List<String>,
    cookingInstructions TEXT AS List<String>,
    isFavorite INTEGER AS Boolean DEFAULT 0 NOT NULL,
    id TEXT PRIMARY KEY NOT NULL
);


-- @Dao
-- interface MealDao {
--
--     @Insert
--     suspend fun insertMeal(mealEntity: MealEntity)
--
--     @Query("SELECT * FROM meal_table ORDER BY id DESC")
--     fun getAllMeals(): Flow<List<MealEntity>>
--
--     @Query("SELECT * FROM meal_table WHERE id = :id")
--     fun getSingleMeal(id: String): LiveData<MealEntity?>
--
--     @Delete
--     suspend fun deleteMeal(mealEntity: MealEntity)
--
--     @Query("DELETE FROM meal_table WHERE id = :id")
--     suspend fun deleteMealById(id: Int)
--
--     @Query("DELETE FROM meal_table")
--     suspend fun deleteAllMeals()
-- }

insertMeal:
    INSERT INTO mealEntity (name, imageUrl, cookingTime, servingPeople, category, cookingDifficulty, ingredients, cookingInstructions, isFavorite, id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

getAllMeals:
    SELECT * FROM mealEntity ORDER BY id DESC;

getSingleMeal:
    SELECT * FROM mealEntity WHERE id = ?;

deleteMeal:
    DELETE FROM mealEntity WHERE id = ?;

deleteMealById:
    DELETE FROM mealEntity WHERE id = ?;

deleteAllMeals:
    DELETE FROM mealEntity;